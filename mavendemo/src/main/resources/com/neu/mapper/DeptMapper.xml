<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neu.mapper.DeptMapper">

    <!--    关联集合，根据部门编号查出部门员工-->
    <resultMap id="basicMap" type="com.neu.po.Dept">
        <id property="deptno" column="deptno"></id>
        <collection property="emps" column="deptno" select="com.neu.mapper.EmpMapper.getEmpsByDeptno"></collection>
    </resultMap>

    <!--    引用了下边定义了的sql片段-->
    <!-- basicMap是映射，根据部门编号查询出所有的员工，首先需要在Dept里面加上一个list，存储员工   -->
    <select id="getById" resultMap="basicMap">
        <include refid="select1"></include> where deptno = #{deptno}
    </select>

    <select id="getAll" resultType="com.neu.po.Dept">
        select * from dept;
    </select>

    <insert id="insert">
        insert into dept(deptno, dname, loc) values (#{deptno},#{dname},#{loc})
    </insert>

    <update id="updateLocById">
        update dept set loc = #{loc} where deptno = #{deptno}
    </update>

    <delete id="deleteById">
        delete from dept where deptno = #{deptno}
    </delete>

<!--    这儿不能直接写dname、loc，而是用arg0、arg1代替，或者param1、param2代替-->
    <select id="find" resultType="com.neu.po.Dept">
        select * from dept where dname = #{dname} and loc = #{loc}
    </select>

    <select id="find2" resultType="com.neu.po.Dept">
        select * from dept where dname = #{dname} and loc = #{loc}
    </select>

    <select id="find3" resultType="com.neu.po.Dept">
        select * from dept where dname = #{dname} and loc = #{loc}
    </select>

    <update id="updateDnameById">
        update dept set dname = #{dname} where deptno = #{deptno}
    </update>


    <!--
        ${}根据列名进行排序，动态列名
        #{}固定参数，不动态
    -->
    <select id="getAllByOrderDname" resultType="com.neu.po.Dept">
        select * FROM dept ORDER BY ${columnName} ASC
    </select>

<!--    记得加上单引号，表示dname的一个值，模糊查询，在sql直接写这条语句的时候，是需要加单引号的-->
    <select id="getByDname" resultType="com.neu.po.Dept">
        select * from dept where dname like '%${dname}%'
    </select>

    <select id="getByDname2" resultType="com.neu.po.Dept">
        select * from dept where dname like #{dname}
    </select>

<!--    动态sql-->
    <select id="search" resultType="com.neu.po.Dept">
        select * from dept
        where 1=1     <!-- 后边的条件都不对，1=1保证sql语句的正确性 -->
        <if test="deptno != null"> and deptno = #{deptno}</if>      <!-- if语句中的deptno字段是Dept中的属性名 -->
        <if test="dname != null">and dname = #{dname}</if>
        <if test="loc != null"> and loc = #{loc}</if>
    </select>

    <select id="search2" resultType="com.neu.po.Dept">
<!--        prefix：前缀，prefixOverrides：前缀覆盖，后边的值为被覆盖的前缀-->
<!--        prefix：如果trim标签中内容不为空串，则添加前缀，否则不添加-->
<!--        prefixOverrides：如果trim标签内容最前面是该属性的值，则被覆盖掉-->
        select * from dept
        <trim prefix="where" prefixOverrides="and">
            <if test="deptno != null"> and deptno = #{deptno}</if>
            <if test="dname != null">and dname = #{dname}</if>
            <if test="loc != null"> and loc = #{loc}</if>
        </trim>
    </select>

<!--    直接使用where标签-->
    <select id="search3" resultType="com.neu.po.Dept">
        select * from dept
        <where>
            <if test="deptno != null"> and deptno = #{deptno}</if>
            <if test="dname != null">and dname = #{dname}</if>
            <if test="loc != null"> and loc = #{loc}</if>
        </where>
    </select>

<!--    set标签帮我们决定在哪添加逗号-->
    <update id="updateLocal">
        update dept
            <set>
                <if test="dname != null">dname = #{dname}</if>
                <if test="loc != null">loc = #{loc}</if>
            </set>
            where deptno = #{deptno}
    </update>

<!--    item：是个变量，可以随意起名;open、close:在前面、后面加括号（因为在原始的sql语句中是有括号的）-->
<!--    separator：分隔符-->
<!--    collection：可以是array 也可以是 list-->
    <delete id="deleteBatch">
        delete from dept where deptno in
        <foreach collection="array" item="deptno" open="(" close=")" separator=",">
            #{deptno}
        </foreach>
    </delete>

<!--    批量添加操作-->
<!--    传入的是list，list中的元素是Dept对象，所以在循环体里面是需要给出具体属性的-->
    <insert id="insertBatch">
        insert into dept(deptno, dname, loc) values
            <foreach collection="list" separator="," item="dept">
                (#{dept.deptno},#{dept.dname},#{dept.loc})
            </foreach>
    </insert>


<!--    sql片段-->
    <sql id="select1">
        select * from dept
    </sql>

<!--    指定返回类型-->
    <select id="getDnameById" resultType="string">
        select dname from dept where deptno = #{deptno}
    </select>

    <select id="getNumOfDept" resultType="int">
        select count(deptno) from dept
    </select>

    <select id="exist" resultType="boolean">
        select count(*) from dept where dname = #{dname}
    </select>

    <select id="paged" resultType="com.neu.po.Dept">
        select * from dept order by deptno
        limit ${(pageNum-1)*pageSize},#{pageSize}
    </select>


</mapper>
